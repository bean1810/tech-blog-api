{"version":3,"file":"AuthorsService.js","names":["AuthorsService","database","Authors","findAll","newAuthor","create","id","updateAuthor","findOne","where","author_id","Number","authorToUpdate","update","theAuthor","authorToDelete","destroy","deletedAuthor"],"sources":["../../../api/server/services/AuthorsService.js"],"sourcesContent":["import database from '../src/models';\n\nclass AuthorsService {\n    static async getAllAuthors() {\n        try {\n            return await database.Authors.findAll();\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    static async addAuthor(newAuthor) {\n        try {\n            return await database.Authors.create(newAuthor);\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    static async updateAuthor(id, updateAuthor) {\n        try {\n            const authorToUpdate = await database.Authors.findOne({\n                where: { author_id: Number(id) }\n            });\n\n            if (authorToUpdate) {\n                await database.Authors.update(updateAuthor, { where: { author_id: Number(id) } });\n\n                return updateAuthor;\n            }\n            return null;\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    static async getOneAuthor(id) {\n        try {\n            const theAuthor = await database.Authors.findOne({\n                where: { author_id: Number(id) }\n            });\n\n            return theAuthor;\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    static async deleteAuthor(id) {\n        try {\n            const authorToDelete = await database.Authors.findOne({ where: { author_id: Number(id) } });\n\n            if (authorToDelete) {\n                const deletedAuthor = await database.Authors.destroy({\n                    where: { author_id: Number(id) }\n                });\n                return deletedAuthor;\n            }\n            return null;\n        } catch (error) {\n            throw error;\n        }\n    }\n}\n\nexport default AuthorsService;"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;IAEMA,c;;;;;;;;yGACF;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAEqBC,kBAAA,CAASC,OAAT,CAAiBC,OAAjB,EAFrB;;cAAA;gBAAA;;cAAA;gBAAA;gBAAA;gBAAA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;qGAQA,kBAAuBC,SAAvB;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAEqBH,kBAAA,CAASC,OAAT,CAAiBG,MAAjB,CAAwBD,SAAxB,CAFrB;;cAAA;gBAAA;;cAAA;gBAAA;gBAAA;gBAAA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;yGAQA,kBAA0BE,EAA1B,EAA8BC,aAA9B;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAEqCN,kBAAA,CAASC,OAAT,CAAiBM,OAAjB,CAAyB;kBAClDC,KAAK,EAAE;oBAAEC,SAAS,EAAEC,MAAM,CAACL,EAAD;kBAAnB;gBAD2C,CAAzB,CAFrC;;cAAA;gBAEcM,cAFd;;gBAAA,KAMYA,cANZ;kBAAA;kBAAA;gBAAA;;gBAAA;gBAAA,OAOkBX,kBAAA,CAASC,OAAT,CAAiBW,MAAjB,CAAwBN,aAAxB,EAAsC;kBAAEE,KAAK,EAAE;oBAAEC,SAAS,EAAEC,MAAM,CAACL,EAAD;kBAAnB;gBAAT,CAAtC,CAPlB;;cAAA;gBAAA,kCASmBC,aATnB;;cAAA;gBAAA,kCAWe,IAXf;;cAAA;gBAAA;gBAAA;gBAAA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;wGAiBA,kBAA0BD,EAA1B;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAEgCL,kBAAA,CAASC,OAAT,CAAiBM,OAAjB,CAAyB;kBAC7CC,KAAK,EAAE;oBAAEC,SAAS,EAAEC,MAAM,CAACL,EAAD;kBAAnB;gBADsC,CAAzB,CAFhC;;cAAA;gBAEcQ,SAFd;gBAAA,kCAMeA,SANf;;cAAA;gBAAA;gBAAA;gBAAA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;wGAYA,kBAA0BR,EAA1B;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAEqCL,kBAAA,CAASC,OAAT,CAAiBM,OAAjB,CAAyB;kBAAEC,KAAK,EAAE;oBAAEC,SAAS,EAAEC,MAAM,CAACL,EAAD;kBAAnB;gBAAT,CAAzB,CAFrC;;cAAA;gBAEcS,cAFd;;gBAAA,KAIYA,cAJZ;kBAAA;kBAAA;gBAAA;;gBAAA;gBAAA,OAKwCd,kBAAA,CAASC,OAAT,CAAiBc,OAAjB,CAAyB;kBACjDP,KAAK,EAAE;oBAAEC,SAAS,EAAEC,MAAM,CAACL,EAAD;kBAAnB;gBAD0C,CAAzB,CALxC;;cAAA;gBAKkBW,aALlB;gBAAA,kCAQmBA,aARnB;;cAAA;gBAAA,kCAUe,IAVf;;cAAA;gBAAA;gBAAA;gBAAA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,C;;;;;;;;;;;;eAiBWjB,c"}