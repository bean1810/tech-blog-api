{"version":3,"file":"AuthorsController.js","names":["responseUtils","ResponseUtil","AuthorController","req","res","AuthorsService","getAllAuthors","allAuthors","length","setSuccess","send","setError","ObjectUtils","isObjectNotEmpty","body","getOneAuthor","author_id","isAuthorExist","updatedAuthor","addAuthor","newAuthor","createdAuthor","message","alteredAuthor","id","Number","updateAuthor","isEmpty","params","findAuthorToUpdate","theAuthor","deleteAuthor","authorToDelete"],"sources":["../../../api/server/controllers/AuthorsController.js"],"sourcesContent":["import AuthorsService from '../services/AuthorsService';\nimport ResponseUtil from '../utils/ResponseUtils';\nimport ObjectUtils from '../utils/ObjectUtils';\n\nconst responseUtils = new ResponseUtil();\n\nclass AuthorController {\n    static async getAllAuthors(req, res) {\n        try {\n            const allAuthors = await AuthorsService.getAllAuthors();\n            if (allAuthors.length > 0) {\n                responseUtils.setSuccess(200, 'Authors retrieved', allAuthors);\n            } else {\n                responseUtils.setSuccess(200, 'No Author found');\n            }\n            return responseUtils.send(res);\n        } catch (error) {\n            responseUtils.setError(400, error);\n            return responseUtils.send(res);\n        }\n    }\n\n    static async upsertAuthor(req, res) {\n        if (!ObjectUtils.isObjectNotEmpty(req.body)) {\n            responseUtils.setError(400, 'Please provide complete details');\n            return responseUtils.send(res);\n        }\n        const isAuthorExist = await AuthorsService.getOneAuthor(req.body.author_id);\n        if (isAuthorExist) {\n            AuthorController.updatedAuthor(req, res);\n        } else {\n            AuthorController.addAuthor(req, res);\n        }\n    }\n\n    static async addAuthor(req, res) {\n        if (!ObjectUtils.isObjectNotEmpty(req.body)) {\n            responseUtils.setError(400, 'Please provide complete details');\n            return responseUtils.send(res);\n        }\n        const newAuthor = req.body;\n        try {\n            const createdAuthor = await AuthorsService.addAuthor(newAuthor);\n            responseUtils.setSuccess(201, 'Author Added!', createdAuthor);\n            return responseUtils.send(res);\n        } catch (error) {\n            responseUtils.setError(400, error.message);\n            return responseUtils.send(res);\n        }\n    }\n\n    static async updateAuthor(req, res) {\n        const alteredAuthor = req.body;\n        const id = req.body.author_id;\n        if (!Number(id)) {\n            responseUtils.setError(400, 'Please input a valid numeric value');\n            return responseUtils.send(res);\n        }\n        try {\n            const updateAuthor = await AuthorsService.updateAuthor(id, alteredAuthor);\n            responseUtils.setSuccess(200, 'Author updated', updateAuthor);\n            return responseUtils.send(res);\n        } catch (error) {\n            responseUtils.setError(404, error);\n            return responseUtils.send(res);\n        }\n    }\n\n    static async fincAuthorToUpdate(req, res) {\n        const alteredAuthor = req.body;\n        const { id } = !ObjectUtils.isEmpty(req.params) ? req.params : { id: req.body.author_id };\n        if (!Number(id)) {\n            responseUtils.setError(400, 'Please input a valid numeric value');\n            return responseUtils.send(res);\n        }\n        try {\n            const updateAuthor = await AuthorsService.findAuthorToUpdate(id, alteredAuthor);\n            if (!updateAuthor) {\n                responseUtils.setError(404, `Cannot find Author with the author_id: ${id}`);\n            } else {\n                responseUtils.setSuccess(200, 'Author updated', updateAuthor);\n            }\n            return responseUtils.send(res);\n        } catch (error) {\n            responseUtils.setError(404, error);\n            return responseUtils.send(res);\n        }\n    }\n\n    static async getAAuthor(req, res) {\n        const { id } = req.params;\n\n        if (!Number(id)) {\n            responseUtils.setError(400, 'Please input a valid numeric value');\n            return responseUtils.send(res);\n        }\n\n        try {\n            const theAuthor = await AuthorsService.getOneAuthor(id);\n\n            if (!theAuthor) {\n                responseUtils.setError(404, `Cannot find Author with the author_id ${id}`);\n            } else {\n                responseUtils.setSuccess(200, 'Found Author', theAuthor);\n            }\n            return responseUtils.send(res);\n        } catch (error) {\n            responseUtils.setError(404, error);\n            return responseUtils.send(res);\n        }\n    }\n\n    static async deleteAuthor(req, res) {\n        const { id } = req.params;\n\n        if (!Number(id)) {\n            responseUtils.setError(400, 'Please provide a numeric value');\n            return responseUtils.send(res);\n        }\n\n        try {\n            const authorToDelete = await AuthorsService.deleteAuthor(id);\n\n            if (authorToDelete) {\n                responseUtils.setSuccess(200, 'Author deleted');\n            } else {\n                responseUtils.setError(404, `Author with the author_id ${id} cannot be found`);\n            }\n            return responseUtils.send(res);\n        } catch (error) {\n            responseUtils.setError(400, error);\n            return responseUtils.send(res);\n        }\n    }\n}\n\nexport default AuthorController;"],"mappings":"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"}